name: SoulLib CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build-and-test:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "Windows MSVC C++20"
            os: windows-latest
            cxx_standard: 20
            cpp23_flag: OFF
            compiler: msvc
          
          - name: "Windows MSVC C++23 Experimental"
            os: windows-latest
            cxx_standard: 20
            cpp23_flag: ON
            compiler: msvc
          
          - name: "Ubuntu GCC C++20"
            os: ubuntu-latest
            cxx_standard: 20
            cpp23_flag: OFF
            compiler: gcc
            cc: gcc-11
            cxx: g++-11
          
          - name: "Ubuntu Clang C++20"
            os: ubuntu-latest
            cxx_standard: 20
            cpp23_flag: OFF
            compiler: clang
            cc: clang-14
            cxx: clang++-14

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build

    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      run: |
        cmake -S . -B build `
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} `
          -DSOULLIB_ENABLE_CPP23=${{ matrix.config.cpp23_flag }} `
          -DSOULLIB_BUILD_TESTS=ON `
          -DSOULLIB_BUILD_BENCHMARKS=ON `
          -DSOULLIB_BUILD_TOOLS=ON

    - name: Configure CMake (Linux)
      if: runner.os == 'Linux'
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      run: |
        cmake -S . -B build \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -DSOULLIB_ENABLE_CPP23=${{ matrix.config.cpp23_flag }} \
          -DSOULLIB_BUILD_TESTS=ON \
          -DSOULLIB_BUILD_BENCHMARKS=ON \
          -DSOULLIB_BUILD_TOOLS=ON

    - name: Build
      run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

    - name: Run Tests
      run: ctest --test-dir build --output-on-failure -C ${{ env.BUILD_TYPE }}

    - name: Run Memory Visualizer Smoke Test
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          ./build/bin/${{ env.BUILD_TYPE }}/SoulLibMemoryViz.exe build/memory_snapshot.json || echo "MemoryViz exited with $?"
        else
          ./build/bin/SoulLibMemoryViz build/memory_snapshot.json || echo "MemoryViz exited with $?"
        fi

    - name: Run DAG Visualizer Smoke Test
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          ./build/bin/${{ env.BUILD_TYPE }}/SoulLibDagViz.exe build/sample_dag.dot
        else
          ./build/bin/SoulLibDagViz build/sample_dag.dot
        fi
        cat build/sample_dag.dot

    - name: Upload Test Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.config.name }}
        path: |
          build/Testing/
          build/*.json
          build/*.dot

  benchmark:
    name: Performance Regression Check
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build

    - name: Configure and Build
      run: |
        cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DSOULLIB_BUILD_BENCHMARKS=ON
        cmake --build build --parallel

    - name: Run Benchmarks
      run: |
        ./build/bin/SoulLibBenchmarks --benchmark_format=json --benchmark_out=benchmarks.json

    - name: Store Benchmark Results
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'googlecpp'
        output-file-path: benchmarks.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        alert-threshold: '150%'
        comment-on-alert: true
        fail-on-alert: false
